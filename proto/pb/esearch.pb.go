// Code generated by protoc-gen-go. DO NOT EDIT.
// source: esearch.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	esearch.proto
	uploader.proto

It has these top-level messages:
	NameRequest
	NearRequest
	UserInfo
	UserInfos
	UploadRequest
	FileRequest
	FileInfo
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 用户名搜索参数
type NameRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *NameRequest) Reset()                    { *m = NameRequest{} }
func (m *NameRequest) String() string            { return proto.CompactTextString(m) }
func (*NameRequest) ProtoMessage()               {}
func (*NameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NameRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// 经纬度搜索参数
type NearRequest struct {
	Lat       float64 `protobuf:"fixed64,1,opt,name=lat" json:"lat,omitempty"`
	Lon       float64 `protobuf:"fixed64,2,opt,name=lon" json:"lon,omitempty"`
	Gender    int32   `protobuf:"varint,3,opt,name=gender" json:"gender,omitempty"`
	PageToken string  `protobuf:"bytes,4,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *NearRequest) Reset()                    { *m = NearRequest{} }
func (m *NearRequest) String() string            { return proto.CompactTextString(m) }
func (*NearRequest) ProtoMessage()               {}
func (*NearRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NearRequest) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *NearRequest) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *NearRequest) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *NearRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// 用户信息
type UserInfo struct {
	Uid       string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AvatarId  string `protobuf:"bytes,3,opt,name=avatar_id,json=avatarId" json:"avatar_id,omitempty"`
	AvatarEx  string `protobuf:"bytes,4,opt,name=avatar_ex,json=avatarEx" json:"avatar_ex,omitempty"`
	Typeu     int32  `protobuf:"varint,5,opt,name=typeu" json:"typeu,omitempty"`
	State     int32  `protobuf:"varint,6,opt,name=state" json:"state,omitempty"`
	CreatedAt int64  `protobuf:"varint,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserInfo) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetAvatarId() string {
	if m != nil {
		return m.AvatarId
	}
	return ""
}

func (m *UserInfo) GetAvatarEx() string {
	if m != nil {
		return m.AvatarEx
	}
	return ""
}

func (m *UserInfo) GetTypeu() int32 {
	if m != nil {
		return m.Typeu
	}
	return 0
}

func (m *UserInfo) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *UserInfo) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserInfo) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

// 关联信息数组
type UserInfos struct {
	Items     []*UserInfo `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	PageToken string      `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *UserInfos) Reset()                    { *m = UserInfos{} }
func (m *UserInfos) String() string            { return proto.CompactTextString(m) }
func (*UserInfos) ProtoMessage()               {}
func (*UserInfos) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserInfos) GetItems() []*UserInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *UserInfos) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*NameRequest)(nil), "pb.NameRequest")
	proto.RegisterType((*NearRequest)(nil), "pb.NearRequest")
	proto.RegisterType((*UserInfo)(nil), "pb.UserInfo")
	proto.RegisterType((*UserInfos)(nil), "pb.UserInfos")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Esearch service

type EsearchClient interface {
	SearchByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*UserInfos, error)
	SearchByNear(ctx context.Context, in *NearRequest, opts ...grpc.CallOption) (*UserInfos, error)
}

type esearchClient struct {
	cc *grpc.ClientConn
}

func NewEsearchClient(cc *grpc.ClientConn) EsearchClient {
	return &esearchClient{cc}
}

func (c *esearchClient) SearchByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*UserInfos, error) {
	out := new(UserInfos)
	err := grpc.Invoke(ctx, "/pb.Esearch/SearchByName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *esearchClient) SearchByNear(ctx context.Context, in *NearRequest, opts ...grpc.CallOption) (*UserInfos, error) {
	out := new(UserInfos)
	err := grpc.Invoke(ctx, "/pb.Esearch/SearchByNear", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Esearch service

type EsearchServer interface {
	SearchByName(context.Context, *NameRequest) (*UserInfos, error)
	SearchByNear(context.Context, *NearRequest) (*UserInfos, error)
}

func RegisterEsearchServer(s *grpc.Server, srv EsearchServer) {
	s.RegisterService(&_Esearch_serviceDesc, srv)
}

func _Esearch_SearchByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EsearchServer).SearchByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Esearch/SearchByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EsearchServer).SearchByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Esearch_SearchByNear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EsearchServer).SearchByNear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Esearch/SearchByNear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EsearchServer).SearchByNear(ctx, req.(*NearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Esearch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Esearch",
	HandlerType: (*EsearchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchByName",
			Handler:    _Esearch_SearchByName_Handler,
		},
		{
			MethodName: "SearchByNear",
			Handler:    _Esearch_SearchByNear_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "esearch.proto",
}

func init() { proto.RegisterFile("esearch.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcd, 0x4e, 0xfa, 0x40,
	0x14, 0xc5, 0xff, 0x43, 0x29, 0xd0, 0x0b, 0xe4, 0x6f, 0x26, 0xc6, 0x4c, 0x34, 0x26, 0x4d, 0x57,
	0x5d, 0x11, 0x83, 0x2f, 0x20, 0x26, 0x2c, 0xd8, 0xb0, 0x18, 0x75, 0x4d, 0x06, 0x7a, 0x05, 0xa2,
	0xfd, 0x70, 0x66, 0x6a, 0xe0, 0x3d, 0x7d, 0x20, 0x33, 0x1f, 0xd5, 0x8a, 0x0b, 0x77, 0x77, 0x7e,
	0x27, 0xf7, 0xdc, 0xd3, 0x9c, 0xc2, 0x18, 0x15, 0x0a, 0xb9, 0xd9, 0x4d, 0x2a, 0x59, 0xea, 0x92,
	0x76, 0xaa, 0x75, 0x72, 0x07, 0xc3, 0xa5, 0xc8, 0x91, 0xe3, 0x5b, 0x8d, 0x4a, 0x53, 0x0a, 0xdd,
	0x42, 0xe4, 0xc8, 0x48, 0x4c, 0xd2, 0x88, 0xdb, 0x99, 0x5e, 0x03, 0x54, 0x62, 0x8b, 0x2b, 0x5d,
	0xbe, 0x60, 0xc1, 0x3a, 0x56, 0x89, 0x0c, 0x79, 0x34, 0x20, 0xd9, 0xc1, 0x70, 0x89, 0x42, 0x36,
	0x0e, 0x67, 0x10, 0xbc, 0x0a, 0x6d, 0x0d, 0x08, 0x37, 0xa3, 0x25, 0xa5, 0x5b, 0x34, 0xa4, 0x2c,
	0xe8, 0x05, 0xf4, 0xb6, 0x58, 0x64, 0x28, 0x59, 0x10, 0x93, 0x34, 0xe4, 0xfe, 0x75, 0x72, 0xa9,
	0x7b, 0x7a, 0xe9, 0x83, 0xc0, 0xe0, 0x49, 0xa1, 0x5c, 0x14, 0xcf, 0xa5, 0x71, 0xad, 0xf7, 0x99,
	0x0f, 0x6a, 0xc6, 0xaf, 0xec, 0x9d, 0x56, 0xf6, 0x2b, 0x88, 0xc4, 0xbb, 0xd0, 0x42, 0xae, 0xf6,
	0x99, 0x3d, 0x16, 0xf1, 0x81, 0x03, 0x8b, 0xac, 0x25, 0xe2, 0xc1, 0x5f, 0xf3, 0xe2, 0xfc, 0x40,
	0xcf, 0x21, 0xd4, 0xc7, 0x0a, 0x6b, 0x16, 0xda, 0x88, 0xee, 0x61, 0xa8, 0xd2, 0x42, 0x23, 0xeb,
	0x39, 0x6a, 0x1f, 0x26, 0xf7, 0x46, 0xa2, 0xd0, 0x98, 0xad, 0x84, 0x66, 0xfd, 0x98, 0xa4, 0x01,
	0x8f, 0x3c, 0x99, 0x69, 0x23, 0xd7, 0x55, 0xd6, 0xc8, 0x03, 0x27, 0x7b, 0x32, 0xd3, 0xc9, 0x12,
	0xa2, 0xe6, 0xab, 0x14, 0x4d, 0x20, 0xdc, 0x6b, 0xcc, 0x15, 0x23, 0x71, 0x90, 0x0e, 0xa7, 0xa3,
	0x49, 0xb5, 0x9e, 0x34, 0x2a, 0x77, 0xd2, 0x1f, 0x85, 0x4c, 0x73, 0xe8, 0xcf, 0x5d, 0xcf, 0xf4,
	0x06, 0x46, 0x0f, 0x76, 0xba, 0x3f, 0x9a, 0x96, 0xe9, 0x7f, 0x63, 0xd7, 0xea, 0xfb, 0x72, 0xdc,
	0xf6, 0x57, 0xc9, 0xbf, 0x1f, 0x1b, 0x28, 0xa4, 0xdf, 0xf8, 0xee, 0xf7, 0xd7, 0xc6, 0xba, 0x67,
	0x7f, 0xa6, 0xdb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x13, 0x05, 0x35, 0x5d, 0x02, 0x00,
	0x00,
}
